
# This file was automatically generated by the ASysC compiler. Don't modify it.


import math
import circuit_base
from circuit_base import circuit_base, element

class circuit( circuit_base ):

	def __init__(self):
		super().__init__()
		self.C = element('C')
		self.L = element('L')
		self.R = element('R')
		self.C1_U = element('C1_U')
		self.V_I = element('V_I')
		self.V_U = element('V_U')
		self.R1_U = element('R1_U')
		self.R1_I = element('R1_I')
		self.L1_U = element('L1_U')
		self.L1_I = element('L1_I')
		self.C1_I = element('C1_I')

	def compute_f(self):
		self._setf(self.C1_U, -(1/(((self._getv(self.R)*self._getv(self.C))*self.s+1)+(self._getv(self.L)*self._getv(self.C))*self.s**2)), self.freq)
		self._setf(self.V_I, -((self._getv(self.C)*self.s)/(((self._getv(self.R)*self._getv(self.C))*self.s+1)+(self._getv(self.L)*self._getv(self.C))*self.s**2)), self.freq)
		self._setf(self.V_U, (((self._getv(self.L)*self._getv(self.C))*self.s**2+(self._getv(self.R)*self._getv(self.C))*self.s)+1)/(((self._getv(self.L)*self._getv(self.C))*self.s**2+(self._getv(self.R)*self._getv(self.C))*self.s)+1), self.freq)
		self._setf(self.R1_U, -(((self._getv(self.R)*self._getv(self.C))*self.s)/(((self._getv(self.R)*self._getv(self.C))*self.s+1)+(self._getv(self.L)*self._getv(self.C))*self.s**2)), self.freq)
		self._setf(self.R1_I, -((self._getv(self.C)*self.s)/(((self._getv(self.C)*self._getv(self.R))*self.s+(self._getv(self.L)*self._getv(self.C))*self.s**2)+1)), self.freq)
		self._setf(self.L1_U, -(((self._getv(self.L)*self._getv(self.C))*self.s**2)/(((self._getv(self.L)*self._getv(self.C))*self.s**2+1)+(self._getv(self.C)*self._getv(self.R))*self.s)), self.freq)
		self._setf(self.L1_I, -((self._getv(self.C)*self.s)/((1+(self._getv(self.C)*self._getv(self.L))*self.s**2)+(self._getv(self.C)*self._getv(self.R))*self.s)), self.freq)
		self._setf(self.C1_I, -((self._getv(self.C)*self.s)/(((self._getv(self.C)*self._getv(self.R))*self.s+1)+(self._getv(self.C)*self._getv(self.L))*self.s**2)), self.freq)

